;works!!!!
#lang racket
(define myList '())

(define add
      (lambda (new-item)
         (set! myList
               (cons new-item myList))
        myList))

(define (insertAtFront elt lst)
  (map (lambda (x)
         (cons elt x))
       lst))

(define (genTours m)
(if (< m 2)
      null
      (cons (add m) (genTours(- m 1)))
      )
  (insertAtFront 1
  (permutations myList))
  )

(define first 0)
(define (score positions tour)
  null
)

(define (best positions tour)
  null
)

(define (count tour)
  null
)

(define (count2 positions)
  null
)

(define (pytha num)
  (sqrt (+ (* (list-ref num 0)(list-ref num 0))(* (list-ref num 1)(list-ref num 1))))
)
